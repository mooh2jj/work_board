package com.myspring.dsgproj.controller.member;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.myspring.dsgproj.dto.member.MemberDTO;
import com.myspring.dsgproj.service.UserMailSendService;

@Controller
@RequestMapping("/member/*")
public class MemberController {

	@Autowired
	private SqlSession sqlSession;
	
	@Autowired
	private UserMailSendService mailsender;
	
	@RequestMapping("/loginmain")
	public String loginmain() {
		return "member/loginmain";
	}
	
	
	@RequestMapping(value = "/login.do", method = RequestMethod.POST)
	public String login(MemberDTO dto, HttpSession session, Model model) {
		System.out.println("member/login.do start...");
		System.out.println("MemberDTO: "+ dto);
		
		
		String name = sqlSession.selectOne("member.idcheck", dto);
		System.out.println("name: "+ name);	
		
		if(name != null) {		// 로그인 성공
//			return "member/main";
			session.setAttribute("email", dto.getEmail());
			session.setAttribute("name", name);
			
			model.addAttribute("message", "success");
			return "home";
		} else {
			model.addAttribute("message", "error");
			return "member/loginmain";
		}
		
	}
	
	@RequestMapping(value= "emailcheck.do", method = RequestMethod.POST)
	public String emailcheck() {
		return "";
	}
	
	@RequestMapping("/logout.do")
	public String logout(HttpSession session, Model model) {
		session.invalidate();
		
		model.addAttribute("message", "logout");
		
		return "member/loginmain";
	}
	
	@RequestMapping("/join")
	public String join() {
		return "member/join";
	}
	
	@RequestMapping("/joinRegiser.do")
	public String joinRegiser(MemberDTO dto, HttpServletRequest request) {
		
		System.out.println("dto: "+ dto);
		
		sqlSession.insert("member.joinRegiser", dto);
		mailsender.mailSendWithUserKey(dto.getEmail(), dto.getName(), request);
		
		return "member/emailAuth";
		
	}
	
	
}
